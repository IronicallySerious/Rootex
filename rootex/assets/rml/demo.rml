<rml>
	<head>
		<title>Demo</title>
		<style>
			#transition_test {
				transition: padding-left background-color transform 1.6s elastic-out;
				transform: scale(1.0);
				background-color: #c66;
			}
			#transition_test:hover {
				padding-left: 60px;
				transform: scale(1.5);
				background-color: #f8b600;
			}
			p
			{
				font-family: "Lato";
				font-size: 100px;
				color: purple;
				font-effect: glow(2px 4px 2px 3px #644);
				border: 2px #DB6565;
			}
			body
			{
				width: 100%;
				height: 100%;
				
				margin: auto;
			}
			
			div#title_bar div#icon
			{
				display: none;
			}
			
			div#content
			{
				text-align: left;
			}
		</style>
		<script>
require("game/assets/scripts/state_machine")

Demo = {
	machine = StateMachine(),
	document = nil
}

function Demo.setDocument(document)
	Demo.document = document
end

function Demo.onNextDialog(event)
	if event:getData().y == 0 then
		return true
	end

	local newState = Demo.machine:change()
	local dialogueBox = Demo.document:GetElementById("dialogue")
	if newState == nil then
		if dialogueBox ~= nil then
			Demo.document:RemoveChild(dialogueBox)
		end
		return true
	end
	dialogueBox.inner_rml = newState:getDesc()
	return true
end

RTX.Connect(Demo.onNextDialog, "NextDialogue")

function Demo.toggle(document, enabled)
	if enabled then
		document:GetElementById("rootex_button").style.visibility = "hidden"
	else
		document:GetElementById("rootex_button").style.visibility = "visible"
	end
end

		</script>
	</head>
	<body onload="Demo.setDocument(document)">
		<p id="transition_test">This is a sample!</p>
		<br />
		<img
			id="rootex_button"
			onmousedown="Demo.toggle(document, true)"
			onmouseup="Demo.toggle(document, false)"
			src="../rootex.png"
			width=100 
			height=100 
		/>
		<br/>
		<p id="dialogue">Press A for next dialog</p>
	</body>
</rml>